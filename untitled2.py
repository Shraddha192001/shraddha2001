# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_kjd9UOz6B43WoGMUawx9Rygho8Y6xDK
"""

import streamlit as st
import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestClassifier

# Step 1: Load and Preprocess Data
url = "https://archive.ics.uci.edu/ml/machine-learning-databases/19/car.data"
column_names = ['buying', 'maint', 'doors', 'persons', 'lug_boot', 'safety', 'class']
df = pd.read_csv(url, names=column_names)

# Encode categorical features
le = LabelEncoder()
df_encoded = df.apply(le.fit_transform)

# Step 2: Split Data into Features and Target
X = df_encoded.drop('class', axis=1)
y = df_encoded['class']

# Step 3: Train the Best Model (Random Forest)
model = RandomForestClassifier(random_state=42)
model.fit(X, y)

# Step 4: Streamlit UI
st.title("Car Evaluation Prediction")
buying = st.selectbox('Buying', ['low', 'med', 'high', 'vhigh'])
maint = st.selectbox('Maintenance', ['low', 'med', 'high', 'vhigh'])
doors = st.selectbox('Doors', ['2', '3', '4', '5more'])
persons = st.selectbox('Persons', ['2', '4', 'more'])
lug_boot = st.selectbox('Lug Boot', ['small', 'med', 'big'])
safety = st.selectbox('Safety', ['low', 'med', 'high'])

# Process user input and predict
user_input = pd.DataFrame({
    'buying': [buying],
    'maint': [maint],
    'doors': [doors],
    'persons': [persons],
    'lug_boot': [lug_boot],
    'safety': [safety]
})

# Encode user input using the same encoder
user_input_encoded = user_input.apply(le.transform)

# Make prediction
prediction = model.predict(user_input_encoded)
prediction_label = le.inverse_transform(prediction)

# Display prediction result
st.write(f"Predicted Class: {prediction_label[0]}")